{
  "type": "object",
  "properties": {
    "table_id": {
      "description": "The name of the underlying DB table to use.",
      "type": "string"
    },
    "configured_filter": {
      "$ref": "#/definitions/filter",
      "options": {
        "collapsed": true
      }
    },
    "configured_indicators": {
      "type": "array",
      "title": "Indicators",
      "items": {
        "$ref": "#/definitions/indicator"
      },
      "format": "tabs",
      "options": {
        "collapsed": true
      }
    }
  },
  "definitions": {
    "datatype": {
      "type": "string",
      "enum": [
        "date",
        "datetime",
        "string",
        "integer",
        "decimal"
      ],
      "default": "string"
    },
    "expression": {
      "type": "object",
      "options": {
        "keep_oneof_values": false
      },
      "properties": {
        "type": {
          "type": "string",
          "options": {
            "hidden": true
          }
        }
      },
      "oneOf": [
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/expressions/constant.schema.json",
          "title": "Constant",
          "description": "A constant value",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "constant"
              ]
            },
            "constant": {
              "description": "The value of the constant"
            }
          },
          "required": [
            "type",
            "constant"
          ]
        },
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/expressions/array_index.schema.json",
          "title": "Array Index",
          "description": "Extract a single item from an array",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "array_index"
              ]
            },
            "array_expression": {
              "$ref": "#/definitions/expression"
            },
            "index_expression": {
              "$ref": "#/definitions/expression"
            }
          },
          "required": [
            "type",
            "array_expression",
            "index_expression"
          ]
        },
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/expressions/dict.schema.json",
          "title": "Dictionary",
          "description": "Create a dictionary of key/value pairs",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "dict"
              ]
            },
            "properties": {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "$ref": "#/definitions/expression"
                }
              }
            }
          },
          "required": [
            "type",
            "properties"
          ]
        },
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/expressions/property_name.schema.json",
          "title": "Property Name",
          "description": "Access a property by name",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "property_name"
              ]
            },
            "property_name": {
              "description": "The name of the property to access.",
              "type": "string"
            }
          },
          "required": [
            "type",
            "property_name"
          ]
        },
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/expressions/property_name.schema.json",
          "title": "Property Path",
          "description": "Access a property by path",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "property_path"
              ]
            },
            "property_path": {
              "description": "The path of the property to access.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "type",
            "property_path"
          ]
        }
      ]
    },
    "indicator": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://www.commcarehq.org/ucr/expressions/property_name.schema.json",
      "title": "Expression Indicator",
      "description": "Indicator based off an expression",
      "type": "object",
      "headerTemplate": "{{ self.display_name }}",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "expression"
          ]
        },
        "column_id": {
          "type": "string",
          "title": "Column ID",
          "description": "The database column to save to."
        },
        "display_name": {
          "type": "string",
          "title": "Display Name",
          "description": "The display name to use for this indicator."
        },
        "datatype": {
          "$ref": "#/definitions/datatype"
        },
        "expression": {
          "$ref": "#/definitions/expression"
        }
      },
      "required": [
        "type",
        "datatype",
        "column_id",
        "expression"
      ]
    },
    "filter": {
      "type": "object",
      "options": {
        "keep_oneof_values": false
      },
      "properties": {
        "type": {
          "type": "string",
          "options": {
            "hidden": true
          }
        }
      },
      "oneOf": [
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/filters/boolean_expression.schema.json",
          "title": "Boolean Expression",
          "description": "A boolean expression filter",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "boolean_expression"
              ]
            },
            "expression": {
              "$ref": "#/definitions/expression"
            },
            "operator": {
              "$ref": "#/definitions/operator"
            },
            "property_value": {
              "description": "The value to compare the expression output to."
            }
          },
          "required": [
            "type",
            "expression",
            "operator",
            "property_value"
          ]
        },
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/filters/boolean_expression.schema.json",
          "title": "And",
          "description": "An AND filter",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "and"
              ]
            },
            "filters": {
              "type": "array",
              "title": "Filters",
              "items": {
                "$ref": "#/definitions/filter"
              }
            }
          },
          "required": [
            "type",
            "filters"
          ]
        },
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/filters/boolean_expression.schema.json",
          "title": "Not",
          "description": "A NOT filter",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "not"
              ]
            },
            "filter": {
              "$ref": "#/definitions/filter"
            }
          },
          "required": [
            "type",
            "filters"
          ]
        },
        {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "$id": "https://www.commcarehq.org/ucr/filters/boolean_expression.schema.json",
          "title": "Or",
          "description": "An OR filter",
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "or"
              ]
            },
            "filters": {
              "type": "array",
              "title": "Filters",
              "items": {
                "$ref": "#/definitions/filter"
              }
            }
          },
          "required": [
            "type",
            "filters"
          ]
        }
      ]
    },
    "operator": {
      "type": "string",
      "enum": [
        "eq",
        "not_eq",
        "in",
        "in_multi",
        "any_in_multi",
        "lt",
        "lte",
        "gt",
        "gte"
      ],
      "default": "eq"
    }
  }
}
